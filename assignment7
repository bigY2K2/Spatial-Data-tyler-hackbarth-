#####backend

<?php
error_reporting(1);
// lat:lat,
// lng:lng ,
// earthQuakes: echecked ,
// volcanoes:vchecked


//Establish connection to database.
$Conn = new PDO("pgsql:host=localhost;dbname=5443","5443","5443");


if(isset($argv[1]) && $argv[1]=='debug' || $_GET['debug']){
	$_POST['lat'] = 33.546;
	$_POST['lng'] = -122.546;
	$_POST['earthQuakes'] = true;
	$debug = true;
}


if($_POST['earthQuakes']){
	$Poly = GetStatePolyContainsPoint($db,$_POST['lat'],$_POST['lng']);
	$data['Poly'] = sql_to_coordinates($Poly);
	$data['EarthQuakes'] = GetEarthQuakesWithinGeometry($db,$Poly)
	echo json_encode($data);
	exit;
}
if($_POST['volcanoes']){


}


/* $sql = "
	SELECT
		OGR_FID,
		fullname,
		latitude,
		longitude,
		NumGeometries(SHAPE) AS Multi,
		AsText(SHAPE) as Poly,
		69*haversine(latitude,longitude,latpoint, longpoint) AS distance_in_miles
	FROM military_installations
	JOIN (
	SELECT  {$_POST['lat']}  AS latpoint,  {$_POST['lng']} AS longpoint
	) AS p
	ORDER BY distance_in_miles
	LIMIT 5
"; */
$sql="SELECT *
	FROM   cities
	WHERE  cities.wkb_geometry 
    @
    ST_MakeEnvelope (
        -124.74288940429688,41.902277040963696,  
        -113.49288940429688,32.02670629333614, 
        4326)";


$result = $Conn->query($sql);


$Data = array();

while($row = $result->fetch(PDO::FETCH_ASSOC)){
	if($debug){
		print_r($row);
	}
	if($row['Multi']){
		$row['Poly'] = array();
		for($i=1;$i<=$row['Multi'];$i++){
		    $sql = "SELECT AsText(Geometry(SHAPE,{$i})) as P
				    FROM earthquakes
				    WHERE wkb_geometry = '{$row['wkb_geometry']}'";
			$result2 = $db->query($sql);
			/* $row2 = $result2->fetch_assoc();
			$row['Poly'][] = sql_to_coordinates($row2['P']); */
		}
	}else{
		$row['Multi'] = 1;
		$row['Poly'] = sql_to_coordinates($row['Poly']);
	}
	$row['Color'] = "#".random_color();
	$Data[] = $row;
}


echo json_encode($Data);


function GetEarthQuakesWithinGeometry($db,$Geometry){
	$sql = "
		SELECT AsText(SHAPE) as Point,
		FROM `earth_quakes`
		WHERE WITHIN(Point,GeomFromText({$Geometry}))
	";


	$result = $Conn->query($sql);


	$Data = array();


	while($row = $result->fetch(PDO::FETCH_ASSOC)){
		$Data[] = $row['Poly'];
	}


	return $Data;
}


function GetCountryContainsPoint($db,$Lat,$Lon){
	$sql = "
		SELECT asText(SHAPE)
		FROM world_borders A
		WHERE CONTAINS(A.SHAPE,GeomFromText('POINT({$Lon} {$Lat})'))
	";


	$result = $Conn->query($sql);


	$row = $result->fetch(PDO::FETCH_ASSOC);


	return $row['SHAPE'];


}


function GetStatePolyContainsPoint($db,$Lat,$Lon){
	$sql = "
		SELECT state,asText(SHAPE) as SHAPE
		FROM state_borders A
		WHERE CONTAINS(A.SHAPE,GeomFromText('POINT({$Lon} {$Lat})'))
	";


	$result = $db->query($sql);


	$row = $result->fetch(PDO::FETCH_ASSOC);


	return $row['SHAPE'];


}


function sql_to_coordinates($blob)
{
	$blob = str_replace("))", "", str_replace("POLYGON((", "", $blob));
	$coords = explode(",", $blob);
	$coordinates = array();
	foreach($coords as $coord)
	{
		$coord_split = explode(" ", $coord);
		$coordinates[]=array(str_replace("\n","",$coord_split[0]),str_replace("\n","",$coord_split[1]));
	}
	return $coordinates;
}


function random_color_part() {
    return str_pad( dechex( mt_rand( 0, 255 ) ), 2, '0', STR_PAD_LEFT);
}


function random_color() {
    return random_color_part() . random_color_part() . random_color_part();
}


function getFeatures(){
    $sql = "SELECT * FROM pg_catalog.pg_tables WHERE schemaname = 'public'";
    $result = $db->query($sql);
    $TableArray = array();
    while($row = $result->fetch(PDO::FETCH_ASSOC)){
        $TableArray[] = $row['tablename'];
    }
    echo json_encode($TableArray);
}

#####index
<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Bounding Box</title>
    <style>
		section {
			width: 90%;
			height: 600px;
			background: #C0C0C0;
			margin: auto;
			padding: 5px;
		}
		div#map-canvas {
			width: 80%;
			height: 600px;
			float: left;
		}
		div#form-stuff {
			margin-left: 15%;
			padding: 20px;
			height: 600px;


		}
    </style>
    <!-- Include Google Maps Api to generate maps -->
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp"></script>


    <!-- Include Jquery to help with simplifying javascript syntax  -->
	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="./geo.js"></script>
    <script>


        //Add a listener that runs "initialize" when page is done loading.
        google.maps.event.addDomListener(window, 'load', initialize);
	
	//test to place a marker
	var myLatlng = new google.maps.LatLng(-44.213709909702054,-114.5390622317791);
	var mapOptions = {
		zoom: 4,
		center: myLatlng
	}
	var map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);

	var marker = new google.maps.Marker
	({position: myLatlng,
    title:"testing marker"});
    </script>
  </head>
  <body>
  <section>
    <div id="map-canvas"></div>
	<div id="form-stuff">
		Query Number: <input type="text" name="QueryNum" id="QueryNum" value="1"><br>
        UpperLeft:<br>
        &nbsp;&nbsp;&nbsp;Lat: <span id="lat1"></span><br>
        &nbsp;&nbsp;&nbsp;Lon: <span id="lon1"></span><br>
        LowerRight:<br>
        &nbsp;&nbsp;&nbsp;Lat: <span id="lat2"></span><br>
        &nbsp;&nbsp;&nbsp;Lon: <span id="lon2"></span><br>
        Data Sources:<br>
        
	
		
		
		
		
		
		<?php
            $Conn = new PDO("pgsql:host=localhost;dbname=5443","5443","5443");
            $sql = "SELECT * FROM pg_catalog.pg_tables WHERE schemaname = 'public'";
            $result = $Conn->query($sql);
            $TableArray = array();
            while($row = $result->fetch(PDO::FETCH_ASSOC)){
                echo"&nbsp;&nbsp;&nbsp;<input type=\"checkbox\" name=\"sources[]\" id=\"$row[tablename]\" checked><br>";
            }
		
    
	



        ?>
	</div>
  </section>
  </body>
</html>



